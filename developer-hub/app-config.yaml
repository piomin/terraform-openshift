
# (1)
app:
  baseUrl: https://backstage-developer-hub-backstage.apps.${DOMAIN}

backend:
  baseUrl: https://backstage-developer-hub-backstage.apps.${DOMAIN}

signInPage: github

# (2)
auth:
  environment: development
  providers:
    github:
      development:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName
              dangerouslyAllowSignInWithoutUserInCatalog: true

# (3)
proxy:
  endpoints:
    /sonarqube:
      target: ${SONARQUBE_URL}/api
      allowedMethods: ['GET', 'POST']
      auth: "${SONARQUBE_TOKEN}:"

# (4)
catalog:
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
  locations:
    - type: url
      target: https://github.com/piomin/backstage-templates/blob/master/templates.yaml
      rules:
        - allow: [Template, Location]
    - type: url
      target: https://github.com/redhat-developer/red-hat-developer-hub-software-templates/blob/main/templates.yaml
      rules:
        - allow: [Template, Location]
    - type: url
      target: https://github.com/redhat-ai-dev/ai-lab-template/blob/main/all.yaml
      rules:
        - allow: [Template, Location]

# (5)
integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
  azure:
    - host: dev.azure.com
      credentials:
        - personalAccessToken: ${AZURE_TOKEN}

sonarqube:
  baseUrl: https://sonarcloud.io
  apiKey: ${SONARQUBE_TOKEN}

azureDevOps:
  host: dev.azure.com
  organization: ${AZURE_ORG}

dangerouslyAllowSignInWithoutUserInCatalog: true